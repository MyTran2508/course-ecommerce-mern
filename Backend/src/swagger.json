{
    "swagger": "2.0",
    "info": {
        "description": "This is a api course ecommerce mern project",
        "version": "1.0.0",
        "title": "Swagger for UserController",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "email": "hoangvuanh101@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        
        },
        "host": "localhost:8082",
        "basePath": "/api"
    },
    "paths": {
        "/api/users": {
            "post": {
                "summary": "Create a new user",
                "description": "Endpoint to create a new user.",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "User object",
                        "required": true,
                        "schema": {
                            
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User created successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            },
            "get": {
                "summary": "Get all users",
                "description": "Endpoint to get all users.",
                "responses": {
                    "200": {
                        "description": "List of users"
                    }
                }
            }
        },
        "/users/{id}": {
            "put": {
                "summary": "Update user by ID",
                "description": "Endpoint to update a user by ID.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "User ID"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Updated user object",
                        "required": true,
                        "schema": {
                         
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User updated successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            },
            "delete": {
                "summary": "Remove user by ID",
                "description": "Endpoint to remove a user by ID.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "User ID"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User removed successfully"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/users/get-by-username/{username}": {
            "get": {
                "summary": "Get user by username",
                "description": "Endpoint to get a user by username.",
                "parameters": [
                    {
                        "name": "username",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "Username"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User found successfully"
                    },
                    "404": {
                        "description": "User not found"
                    }
                }
            }
        },
        "/users/register/send-otp": {
            "post": {
                "summary": "Send OTP for user registration",
                "description": "Endpoint to send OTP for user registration."

            }
        },
        "/users/register/verify-otp": {
            "post": {
                "summary": "Verify OTP for user registration",
                "description": "Endpoint to verify OTP for user registration."
                

            }
        }
    }
}